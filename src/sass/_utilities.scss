@use 'abstracts/modules/generator';
@use 'abstracts/modules/math';

:root {
	@include generator.all((
			'colors' : (
					'src' : (
							'primary' : ((27, 22%, 51%), (27, 22%, 40%)),
							'secondary' : ((217, 14%, 42%), (218, 21%, 18%), (234, 30%, 13%)),
							'neutral' : ((0, 0%, 100%), (0, 0%, 7%)
							)
					),
			),
			'font-types' : (
					'base' : 0.765rem,
					'ratio' : 1.1434,
					'length' : 4,
			),
			'fluid-font-types' : (
					'src' : (
							math.clamped(1rem, 1.25rem),
							math.clamped(2rem, 3rem),
							math.clamped(2rem, 5rem, $width-xs, $width-xl)
					),
			),
		// 16 / 16 / 16 - 1x - static - form pick a date gaps
		// 24 / 24 / 24 - 2x - static - menu items gap with border
		// 32 / 32 / 32 - 5x - static
		// 38 / 38 / 38 - 2x - static - hero logo gap h1 (maybe use default)
		// 52 / 52 / 52 - 3x - static - hero p gap btn / second section title gap items
		// 65 / 65 / 65  - 1x - static - logo padding top
		// 80 / 80 / 80 - 1x - static - footer block padding
			'space-types' : (
					'base' : 0.8rem,
					'ratio' : 1.200,
					'length' : 10,
			),
		// 48 / - / 32 - 1x - fluid - footer padding
		// 55 / - / 36 - 1x - fluid - title gap border top (maybe use default)
		// 60 / - / 27 - 1x - fluid - events p gap btn
		// 99 / - / 84 - 1x - fluid cta block padding
		// 116 / - / 86 - 1x - fluid - footer padding bottom
		// 120 / - / 102  - 1x - fluid - second section block padding
		// 121 / - / 101 - 2x - fluid - first section gap between rows / first section padding-bottom for the last row
		// 160 / - / 80 - 1x - fluid - events block padding
			'fluid-space-types' : (
					'base' : ('min': 2.25rem, 'max': 3rem),
					'ratio' : ('min': 1.175, 'max': 1.200),
					'length' : 8,
			),
			'utilities' : (
					'src' : (
							generator.$font-weights,
							generator.$line-heights,
							generator.$letter-spacings,
							generator.$measures,
							generator.$text-aligns,
							generator.$aligns,
							generator.$justifys,
							generator.$item-aligns,
							generator.$item-justifys,
							generator.$self-aligns,
							generator.$self-justifys,
							generator.$directions,
					)
			))
	);

	--ff-primary    : 'League Spartan', sans-serif;
	--ff-body       : var(--ff-primary);
	--ff-heading    : var(--ff-primary);
	--outline-size  : max(1px, 0.15em);
	--outline-style : solid;
	--outline-color : currentColor;
	--body-space    : #{math.clamped(1.5rem, 10.3rem, $width-xs, $width-xl)};
	--body-size     : min(100% - var(--body-space) * 2, 69.375rem);
}

:where([class*='align'], [class*='direction'], [class*='justify']) {
	display : grid;
}

.text-uppercase {
	text-transform : uppercase;
}

.sr-only {;
	position    : absolute;
	overflow    : hidden;
	margin      : -1px;
	padding     : 0;
	width       : 1px;
	height      : 1px;
	white-space : nowrap;
	clip        : rect(0, 0, 0, 0);
	border      : 0;
	color: hsla(0, 0%, 60%, 0.56);
}

// minus
// 70 / 96 / 72 - custom
// 0 / 230 / 137 - custom
// 216 / - / 152 - 1x - fluid - hero padding-bottom (maybe custom)
// 374 / - / 232 - 1x - fluid - hero padding-top (maybe custom)
