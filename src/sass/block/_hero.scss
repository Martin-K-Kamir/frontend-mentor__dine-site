@use '../abstracts/modules/math';

.hero {
	display        : grid;
	min-block-size : 100vh;

	// diff syntax as fix for postcss-combine-media-query
	@media (min-width: $width-md) and (max-width: $width-lg) {
		min-block-size : 65rem;
	}

	@media (width > $width-lg) {
		min-block-size : 50rem;
	}

	&__content {
		padding-block : var(--space-9);

		@media (width <= $width-lg) {
			padding-block-start : math.clamped(11rem, 23rem);
		}
	}

	img {
		max-block-size : 70rem;

		@media (width <= $width-lg) {
			object-position : top;
		}
	}
}

.hero:has(.form) {
	box-sizing        : content-box;
	padding-block-end : var(--space-fluid-4);

	:where(.hero__content, img) {
		max-block-size : 37.5rem;
	}

	.hero__content {
		@media (width <= $width-lg) {
			padding-block-start : var(--space-fluid-7);
			padding-block-end   : 0;
		}
	}

	.form {
		max-inline-size : 32rem;
		inline-size     : 100%;
		padding-block   : var(--space-fluid-2);
		padding-inline  : var(--space-5);
		box-shadow      : var(--shadow-3);

		@media (width > $width-xs) {
			padding : var(--space-fluid-2);
		}
	}

	picture {
		position : relative;
	}

	picture::after {
		content          : '';
		position         : absolute;
		inset            : 0;
		z-index          : -1;
		background-color : hsl(var(--clr-neutral-2));
		max-block-size   : 37.5rem;
	}
}